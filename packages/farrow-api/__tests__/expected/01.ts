// @ts-nocheck just for testing

/**
 * This file was generated by farrow-api
 * Don't modify it manually
 */
import type { JsonType } from 'farrow-api'

/**
 * @label Collection
 */
export type Collection = {
  namedStruct: NamedStruct
  namedUnion: NamedUnion
  namedIntersect: NamedIntersect
  namedTuple: NamedTuple
  partialStruct: PartialStruct
  number: number
  int: number
  float: number
  string: string
  boolean: boolean
  id: string
  date: string
  nest?: Collection | null | undefined
  list: Collection[]
  struct: {
    a: number
  }
  union: number | string | boolean
  intersect: {
    a: number
  } & {
    b: number
  } & {
    c: number
  }
  any: any
  unknown: unknown
  json: JsonType
  literal: 1 | '1' | false | null
  record: Record<string, Collection>
  /**
   * @remarks test description
   * @deprecated test deprecated
   */
  describable: number
}

/**
 * @label NamedStruct
 */
export type NamedStruct = {
  named: string
}

/**
 * @label NamedUnion
 */
export type NamedUnion = number | string | number

/**
 * @label NamedIntersect
 */
export type NamedIntersect = {
  a: number
} & {
  b: number
} & {
  c: number
}

/**
 * @label NamedTuple
 */
export type NamedTuple = [
  {
    a: number
  },
  {
    b: number
  },
  {
    c: number
  },
]

/**
 * @label PartialStruct
 */
export type PartialStruct = {
  a?: number | null | undefined
  b?: number | null | undefined
  c?: boolean | null | undefined
}
